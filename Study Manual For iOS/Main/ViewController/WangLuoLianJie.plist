<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Dname</key>
		<string>AFNetworking</string>
		<key>Durl</key>
		<string>https://github.com/AFNetworking/AFNetworking</string>
		<key>Dtext</key>
		<string>ASI不升级以后，最多人用的网络连接开源库。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>iOS网络编程之AFNetworking使用</string>
		<key>Durl</key>
		<string>http://www.superqq.com/blog/2014/11/07/ioswang-luo-bian-cheng-zhi-afnetworkingshi-yong/</string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>iOS开发下载文件速度计算</string>
		<key>Durl</key>
		<string>http://www.superqq.com/blog/2015/01/29/ioskai-fa-xia-zai-wen-jian-su-du-ji-suan/</string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Alamofire</string>
		<key>Durl</key>
		<string>https://github.com/Alamofire/Alamofire</string>
		<key>Dtext</key>
		<string>Alamofire是AFNetworking的作者mattt新写的网络请求的swift库。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>YTKNetwork</string>
		<key>Durl</key>
		<string>https://github.com/yuantiku/YTKNetwork</string>
		<key>Dtext</key>
		<string>是基于 AFNetworking 封装的 iOS网络库，提供了更高层次的网络访问抽象。相比AFNetworking，YTKNetwork提供了以下更高级的功能：按时间或版本号缓存网络请求内容、检查返回 JSON 内容的合法性、文件的断点续传、批量的网络请求发送、filter和插件机制等。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>LxFTPRequest</string>
		<key>Durl</key>
		<string>https://github.com/DeveloperLx/LxFTPRequest</string>
		<key>Dtext</key>
		<string>支持获取FTP服务器资源列表，下载/上传文件，创建/销毁ftp服务器文件/目录，以及下载断点续传，下载/上传进度，自动判断地址格式合法性跟踪等功能！</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>HSDownloadManager</string>
		<key>Durl</key>
		<string>https://github.com/HHuiHao/HSDownloadManager</string>
		<key>Dtext</key>
		<string>HSDownloadManager，下载音乐、视频、图片各种资源，支持多任务、断点下载。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>MutableUploadDemo</string>
		<key>Durl</key>
		<string>https://github.com/HHuiHao/MutableUploadDemo</string>
		<key>Dtext</key>
		<string>模拟需求：图文混编，要求用户选择图片后就上传，可选择多图，并行上传，用户确定提交后后台执行，必须全部图片上传完才能提交文字。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>WTRequestCenter</string>
		<key>Durl</key>
		<string>https://github.com/swtlovewtt/WTRequestCenter</string>
		<key>Dtext</key>
		<string>方便缓存的请求库，提供了方便的HTTP请求方法，传入请求url和参数，返回成功和失败的回调。 UIKit扩展提供了许多不错的方法，快速缓存图片，图片查看，缩放功能， 颜色创建，设备UUID，网页缓存，数据缓存等功能。 无需任何import和配置，目前实现了基础需求。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>MMWormhole</string>
		<key>Durl</key>
		<string>https://github.com/mutualmobile/MMWormhole</string>
		<key>Dtext</key>
		<string>Message passing between iOS apps and extensions 2个iOS设备之间通信。 
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>socket.io-client-swift</string>
		<key>Durl</key>
		<string>https://github.com/socketio/socket.io-client-swift</string>
		<key>Dtext</key>
		<string>WebSockect 客户端类库。开放的通讯协议，有利于构建强大地跨平台应用。 </string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string></string>
		<key>Durl</key>
		<string></string>
		<key>Dtext</key>
		<string></string>
	</dict>
</array>
</plist>
