<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Dname</key>
		<string>HeapInspector</string>
		<key>Durl</key>
		<string>https://github.com/tapwork/HeapInspector-for-iOS</string>
		<key>Dtext</key>
		<string> HeapInspector是一个用于检测应用中的内存泄漏的开源调试工具。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Crashlytics</string>
		<key>Durl</key>
		<string>http://try.crashlytics.com/</string>
		<key>Dtext</key>
		<string> Crashlytics 崩溃报告 崩溃日志  </string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>崩溃报告使用说明</string>
		<key>Durl</key>
		<string>http://www.infoq.com/cn/articles/crashlytics-crash-statistics-tools</string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>UIViewController-Swizzled</string>
		<key>Durl</key>
		<string>https://github.com/RuiAAPeres/UIViewController-Swizzled</string>
		<key>Dtext</key>
		<string>把你进入的每一个controller的类名打出来,如果看一些特别复杂的项目的时候直接运行demo就可以知道执行次序了。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>snoop-it</string>
		<key>Durl</key>
		<string>https://code.google.com/p/snoop-it/</string>
		<key>Dtext</key>
		<string>snoop-it比UIViewController-Swizzled好用，代码托管在google上。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Versions</string>
		<key>Durl</key>
		<string>https://github.com/zenangst/Versions</string>
		<key>Dtext</key>
		<string> 版本比较小工具。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>MobileWebPageTest</string>
		<key>Durl</key>
		<string>http://code4app.com/ios/MobileWebPerformanceTest/5465d3e9933bf00c658b4f43</string>
		<key>Dtext</key>
		<string>MobileWebPageTest是用来测试移动网页性能的软件，它可以对页面的加载和渲染过程进行截屏，协助开发者分析出页面性能瓶颈。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>KKLog</string>
		<key>Durl</key>
		<string>https://github.com/Coneboy-k/KKLog</string>
		<key>Dtext</key>
		<string>一个日志管理系统。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>CleanroomLogger</string>
		<key>Durl</key>
		<string>https://github.com/emaloney/CleanroomLogger</string>
		<key>Dtext</key>
		<string>相当于 CocoaLumberjack 或 Log4j 的 Swift 版本，功能上甚至更强大。另外，源代码中已经内含了完整的 API 文档，使用非常方便。
</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Buildasaur</string>
		<key>Durl</key>
		<string>https://github.com/czechboy0/Buildasaur</string>
		<key>Dtext</key>
		<string>自动测试框架 Buildasaur。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>MMPlaceHolder</string>
		<key>Durl</key>
		<string>https://github.com/adad184/MMPlaceHolder</string>
		<key>Dtext</key>
		<string>一行代码显示UIView的位置及相关参数。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>使用Quick框架和Nimble来测试ViewControler</string>
		<key>Durl</key>
		<string>http://www.devtf.cn/?p=739</string>
		<key>Dtext</key>
		<string>Quick是一个用于创建BDD测试的框架。配合Nimbl，可以为你创建更符合预期目标的测试。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>fastlane</string>
		<key>Durl</key>
		<string>https://github.com/KrauseFx/fastlane</string>
		<key>Dtext</key>
		<string>一套iOS开发和持续集成的命令行工具fastlane，可以用来快速搭建CI甚至自动提交的开发环境。这套工具中包括了上传ipa文件，自动截取多语言截屏，生成推送证书，管理产品证书等一系列实用工具。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>KIF</string>
		<key>Durl</key>
		<string>https://github.com/kif-framework/KIF</string>
		<key>Dtext</key>
		<string>是一个开源的用户界面UI测试框架. 使用 KIF, 并利用 iOS中的辅助功能 API, 你将能够编写模拟用户输入，诸如点击，触摸和文本输入，自动化的UI测试.</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Quick</string>
		<key>Durl</key>
		<string>https://github.com/Quick/Quick</string>
		<key>Dtext</key>
		<string>用于Swift中的单元测试（也可用于Objective-C），与Xcode整合在一起。如果你是Objective-C的粉丝，我建议用Specta代替这个，但是对Swift使用者来说，Quick是最佳选择。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>Sleipnir</string>
		<key>Durl</key>
		<string>https://github.com/railsware/Sleipnir</string>
		<key>Dtext</key>
		<string> Swift的测试框架。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>kiwi-bdd</string>
		<key>Durl</key>
		<string>https://github.com/kiwi-bdd/Kiwi/wiki</string>
		<key>Dtext</key>
		<string>TDD或BDD，objective-c语言的测试框架，最流行的BDD测试框架了，Kiwi最受欢迎（根据github上的star数来推断，行为描述和期望写起来也比较易懂。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>iOS开发中的测试框架</string>
		<key>Durl</key>
		<string>http://www.jianshu.com/p/7e3f197504c1#</string>
		<key>Dtext</key>
		<string></string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>specta</string>
		<key>Durl</key>
		<string>https://github.com/specta/specta</string>
		<key>Dtext</key>
		<string>TDD或BDD，objective-c语言的测试框架，用的人多。</string>
	</dict>
	<dict>
		<key>Dname</key>
		<string>cedar</string>
		<key>Durl</key>
		<string>https://github.com/pivotal/cedar</string>
		<key>Dtext</key>
		<string>TDD或BDD，objective-c语言的测试框架，用的人少。</string>
	</dict>
</array>
</plist>
